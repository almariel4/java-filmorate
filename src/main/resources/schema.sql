drop table if exists users cascade;
create table users
(
    user_id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email         VARCHAR NOT NULL,
    login         VARCHAR NOT NULL,
    name          VARCHAR,
    birthday      DATE
);

drop table if exists mpa cascade;
create table mpa
(
    mpa_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name VARCHAR
);

drop table if exists genres cascade;
create table genres
(
    genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name     VARCHAR NOT NULL
);

drop table if exists films cascade;
create table films
(
    film_id     integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name       VARCHAR NOT NULL,
    description VARCHAR(200),
    releaseDate date,
    duration    INTEGER,
    mpa_id      INTEGER NOT NULL REFERENCES mpa (mpa_id)
);

drop table if exists friends;
create table friends
(
    user_id   integer not null references users (user_id) on delete cascade on update cascade,
    friend_id integer not null references users (user_id) on delete cascade on update cascade,
    friend_status boolean
);

drop table if exists likes;
create table likes
(
    film_id integer not null references films (film_id) on delete cascade on update cascade,
    user_id integer not null references users (user_id) on delete cascade on update cascade
);

drop table if exists film_genre;
create table film_genre
(
    film_id  integer not null references films (film_id) on delete cascade on update cascade,
    genre_id integer not null references genres (genre_id) on delete cascade on update cascade
);

